# This is a basic workflow that is manually triggered

name: Restaurants web services CI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [push]
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  #cleanup_job:
  ##  needs: build
   # if: always()
    #runs-on: ubuntu-latest
    #steps:
    #- name: call webhook to delete artifacts
     # env:
      #  WEBHOOKS_SECRET: ${{ secrets.WEBHOOKS_SECRET }}
      #run: |
       # echo "::add-mask::$WEBHOOKS_SECRET"
        #curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $WEBHOOKS_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"

  # This workflow contains a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        # run: mvn --batch-mode --update-snapshots verify
        run: |
            mvn --version
            mvn clean install

      # install ssh private key to local machine
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_LINODE_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      # adding Linode host fingerprints to known_hosts on local machine
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_LINODE_HOST }} >> ~/.ssh/known_hosts

      - name: List files
        #run:  ls /home/runner/work/first-spring/first-spring/target/first-spring-1.0-SNAPSHOT.jar
        run:  ls /home/runner/work/first-spring/first-spring/target/

      # rsync jar from github to linode host
      #- name: Deploy with rsync
       # run: rsync -avz ./dist/ ${{ secrects.SSH_USER }}@${{ secrets.SSH_LINODE_HOST }}:/apps/first-spring/

